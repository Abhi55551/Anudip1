Implement and demonstrate the use of the following in Solidity :
(I).Arrays (II).Enums (III).Structs (IV).Mappings (V).Coversations (VI).Ether Units
(VII).Special Varaibles


(I).Arrays
// Solidity program to demonstrate
// creating a fixed-size array pragma solidity ^0.5.0;

// Creating a contract contract Types {

// Declaring state variables
// of type array uint[6] data1; int[5] data;

// Defining function to add
// values to an array
function array_example() public returns (int[5] memory, uint[6] memory){ data = [int(50), -63, 77, -28, 90];
 
data1 = [uint(10), 20, 30, 40, 50, 60];
}
function getresult() public view returns (int[5] memory,uint[6] memory){ return (data, data1);
}
}


(III).Structs


pragma solidity ^0.5.0; contract test {
struct Book { string title; string author; uint book_id;
}
Book book;
 
function setBook() public {
book = Book('Learn Java', 'TP', 1);
}
function getBookId() public view returns (uint) { return book.book_id;
}
}



(IV).Mappings
pragma solidity ^0.5.0; contract LedgerBalance {
mapping(address => uint) balance;
function updateBalance() public returns(uint) { balance[msg.sender]=20;
return balance[msg.sender];
}
}



pragma solidity ^0.5.0; contract LedgerBalance {
mapping(address => string) name;


function updateBalance() public returns(string memory){ name[msg.sender] = "Dip";
return name[msg.sender];
}
function printsender() public view returns(address) { return msg.sender;
}
}
